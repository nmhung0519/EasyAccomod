@{
    Layout = null;
}
@model EasyAccomod.Models.CreatePostModel

<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="~/Scripts/address.control.js"></script>
<script>
    $(".city-filter").ready(function () { loadCity(); })
</script>
<div class="modal-content">
    @using (Ajax.BeginForm("CreatePost", "Post", new AjaxOptions { UpdateTargetId = "form-post-err-msg" }, new { enctype = "multipart/form-data" }))
    {
        <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">Tạo bài viết</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            <div id="login-form-container" class="container py-3">

                <div class="form-group row">
                    <div class="col-12">
                        @Html.LabelFor(m => m.Address)
                        @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Address, null, new { @class = "err-msg" })
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-12 col-md-4">
                        @Html.LabelFor(m => m.CityId)
                        @Html.DropDownListFor(m => m.CityId, new List<SelectListItem> { new SelectListItem { Value = "0", Text = "Chọn Tỉnh/Thành phố" } }, new { @class = "form-control city-filter" })
                        @Html.ValidationMessageFor(m => m.CityId, null, new { @class = "err-msg" })

                    </div>
                    <div class="col-12 col-md-4">
                        @Html.LabelFor(m => m.DistrictId)
                        @Html.DropDownListFor(m => m.DistrictId, new List<SelectListItem> { new SelectListItem { Value = "0", Text = "Chọn Quận/Huyện" } }, new { @class = "form-control district-filter", @disabled = "disabled" })
                        @Html.ValidationMessageFor(m => m.DistrictId, null, new { @class = "err-msg" })
                    </div>
                    <div class="col-12 col-md-4">
                        @Html.LabelFor(m => m.WardId)
                        @Html.DropDownListFor(m => m.WardId, new List<SelectListItem> { new SelectListItem { Value = "0", Text = "Chọn Phường/Xã" } }, new { @class = "form-control ward-filter", @disabled = "disabled" })
                        @Html.ValidationMessageFor(m => m.WardId, null, new { @class = "err-msg" })
                    </div>

                </div>
                <div class="form-group row">

                    <div class="col-12 col-lg-4">
                        <label for="type" style="white-space: nowrap;">Loại phòng</label>
                        @Html.LabelFor(m => m.Type, new { @style = "white-space: nowrap" })
                        @Html.DropDownListFor(m => m.Type, Model.GetListType(), new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Type, null, new { @class = "err-msg" })
                    </div>
                    <div class="col-12 col-lg-4">
                        @Html.LabelFor(m => m.NumOfRooms)
                        @Html.TextBoxFor(m => m.NumOfRooms, new { @type = "number", @class = "form-control", @value = "1" })
                        @Html.ValidationMessageFor(m => m.NumOfRooms, null, new { @class = "err-msg" })
                    </div>
                    <div class="col-12 col-lg-4">
                        @Html.LabelFor(m => m.Area)
                        @Html.TextBoxFor(m => m.Area, new { @type = "number", @class = "form-control" })
                    </div>


                </div>
                <div class="form-group row">
                    <div class="col-12 col-lg-4">
                        <label for="price-base">Giá BĐS tính theo</label>
                        <select id="PriceUnit" name="PriceUnit" class="form-control">
                            <option value="0">Liên hệ</option>
                            <option value="1">Tháng</option>
                            <option value="2">Quý</option>
                            <option value="3">Năm</option>
                        </select>
                        @Html.ValidationMessageFor(m => m.PriceUnit, null, new { @class = "err-msg" })
                    </div>
                    <div id="price-container" class="col-12 col-lg-4" hidden>
                        @Html.LabelFor(m => m.Price)
                        @Html.TextBoxFor(m => m.Price, new { @class = "form-control", @type = "number" })
                        @Html.ValidationMessageFor(m => m.Price, null, new { @class = "err-msg" })
                    </div>
                </div>
                <div class="form-group row">

                    <div class="col-12 col-lg-4">
                        <label for="electricity-price-base">Giá điện tính theo</label>
                        <select id="electricity-price-base" name="ElectricityBase" class="form-control" onchange="CheckPriceBase(this)">
                            <option value="true">Giá dân</option>
                            <option value="false">Giá thuê(/kWh)</option>
                        </select>
                        @Html.ValidationMessageFor(m => m.ElectricityBase, null, new { @class = "err-msg" })
                    </div>
                    <div id="electricity-price-container" class="col-12 col-lg-4" hidden>
                        @Html.LabelFor(m => m.ElectricityPrice)
                        @Html.TextBoxFor(m => m.ElectricityPrice, new { @type = "number", @class = "form-control", @id = "electricity-price" })
                        @Html.ValidationMessageFor(m => m.ElectricityPrice, null, new { @class = "err-msg" })
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-12 col-lg-4">
                        @Html.LabelFor(m => m.WaterBase)
                        <select id="water-price-base" name="WaterBase" class="form-control">
                            <option value="true">Giá dân</option>
                            <option value="false">Giá thuê(/m3)</option>
                        </select>
                        @Html.ValidationMessageFor(m => m.WaterBase, null, new { @class = "err-msg" })
                    </div>
                    <div id="water-price-container" class="col-12 col-lg-4" hidden>
                        @Html.LabelFor(m => m.WaterPrice)
                        @Html.TextBoxFor(m => m.WaterPrice, new { @type = "number", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.WaterPrice, null, new { @class = "err-msg" })
                    </div>
                </div>


                <h6>Điều kiện, cơ sở vật chất:</h6>

                <div class="form-group row">
                    <div class="col-12 col-sm-4">
                        @Html.CheckBoxFor(m => m.AirConditioner)
                        @Html.LabelFor(m => m.AirConditioner, new { @style = "white-space: nowrap" })
                    </div>
                    <div class="col-12 col-sm-4">
                        @Html.CheckBoxFor(m => m.WaterHeater)
                        @Html.LabelFor(m => m.WaterHeater, new { @style = "white-space: nowrap" })
                    </div>
                    <div class="col-12 col-sm-4">
                        @Html.CheckBoxFor(m => m.PrivateKitchen)
                        @Html.LabelFor(m => m.PrivateKitchen, new { @style = "white-space: nowrap" })
                    </div>
                    <div class="col-6 col-sm-4">
                        @Html.CheckBoxFor(m => m.Balcony)
                        @Html.LabelFor(m => m.Balcony, new { @style = "white-space: nowrap" })
                    </div>
                    <div class="col-12 col-sm-4">
                        @Html.CheckBoxFor(m => m.ClosedRoom)
                        @Html.LabelFor(m => m.ClosedRoom, new { @style = "white-space: nowrap" })
                    </div>
                    <div class="col-12 col-sm-4">
                        @Html.CheckBoxFor(m => m.WithoutHost)
                        @Html.LabelFor(m => m.WithoutHost, new { @style = "white-space: nowrap" })
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-12">
                        <h6 style="display:inline">Tiêu đề </h6>(<span id="char-left">200</span>/200)
                        @Html.TextBoxFor(m => m.Title, new { @onkeyup = "CountChar(this)", @maxlength = "200", @class = "w-100 mx-2 p-2", @style = "height: 60px" })
                        @Html.ValidationMessageFor(m => m.Title, null, new { @class = "err-msg" })
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-12">
                        @Html.LabelFor(m => m.Content, new { @style = "font-weight:bold" })
                        <textarea name="Content" oninput="AutoGrow(this)" maxlength="1000" id="post-description" class="w-100 mx-2 p-2" style="min-height:100px; max-height:500px" placeholder="Mô tả bài viết của bạn"></textarea>
                        @Html.ValidationMessageFor(m => m.Content, null, new { @class = "err-msg" })
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-12 col-lg-4">
                        <label for="post-time-base">Thời gian hiển thị</label>
                        @Html.TextBoxFor(m => m.TimeLength, new { @class = "form-control", @value="1" })
                        @Html.ValidationMessageFor(m => m.TimeLength, null, new { @class = "err-msg" })
                    </div>
                    <div class="col-12 col-lg-4">
                        <label for="time-post-length">&nbsp;</label>
                        @Html.DropDownListFor(m => m.TimeUnit, new List<SelectListItem>
                        {
                            new SelectListItem { Value = "1", Text = "Tuần"},
                            new SelectListItem { Value = "2", Text = "Tháng"},
                            new SelectListItem { Value = "3", Text = "Quý"},
                            new SelectListItem { Value = "4", Text = "Năm"}
                        }, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.TimeUnit, null, new { @class = "err-msg" })
                    </div>
                    <div class="col-12 col-lg-4">
                        <label>Số tiền cần thanh toán:</label>
                        <span class="form-control" id="extend-price" style="color: red">0đ</span>
                    </div>
                </div>
                <h6>Hình ảnh:</h6>
                <div class="col-12 col-lg-6">
                    <input type="file" id="img-url" name="UploadImages" accept="image/*" multiple>
                </div>
                <div class="col-3 col-lg-6 mt-3">
                    <img id="word-img" src="#" style="width: 100%; max-width: 200px; max-height: 200px;">
                </div>
                <div id="form-post-err-msg" class="err-msg"></div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Huỷ</button>
            <button class="btn btn-primary">Đăng bài</button>
        </div>
    }
</div>
<script>
    $("#Type").change(function (e) {
        if ($(e.target).val() >= 2 && $(e.target).val() <= 4) {
            $("#PrivateKitchen").prop("checked", true);
            $("#PrivateKitchen").prop("disabled", true);
            $("#WithoutHost").prop("checked", true);
            $("#WithoutHost").prop("disabled", true);
            $("#ClosedRoom").prop("checked", true);
            $("#ClosedRoom").prop("disabled", true);
            return;
        }
        $("#PrivateKitchen").prop("checked", false);
        $("#PrivateKitchen").prop("disabled", false);
        $("#WithoutHost").prop("checked", false);
        $("#WithoutHost").prop("disabled", false);
        $("#ClosedRoom").prop("checked", false);
        $("#ClosedRoom").prop("disabled", false);
    });
    function CountChar(val) {

        var len = val.value.length;
        $('#char-left').text(200 - len);

    }
    function AutoGrow(element) {

        element.style.height = (element.scrollHeight) + "px";
    }

    $("#PriceUnit").change(function () {
        if ($(this).val() == 0) {
            $("#price-container").prop("hidden", true);
            $("#Price").val("0");
            return;
        }

        $("#price-container").prop("hidden", false);
    });

    $("#electricity-price-base").change(function () {
        if ($(this).val() == "true") {
            $("#electricity-price-container").prop("hidden", true);
            $("#electricity-price").val("0");
            return;
        }

        $("#electricity-price-container").prop("hidden", false);
    });

    $("#water-price-base").change(function () {
        if ($(this).val() == "true") {
            $("#water-price-container").prop("hidden", true);
            $("#water-price").val("0");
            return;
        }

        $("#water-price-container").prop("hidden", false);
    });
    $("#TimeLength").change(function () {
        updatePrice();
    });
    $("#TimeUnit").change(function () {
        updatePrice();
    })
    function updatePrice() {
        $.ajax({
            url: "/PostPrice",
            type: "POST",
            data: { TimeLength: $("#TimeLength").val(), TimeUnit: $("#TimeUnit").val() },
            success: function (data) {
                $("#extend-price")[0].innerHTML = data;
            }
        })
    }
</script>